1. Proje bir teknoloji blogu / haber sitesidir.
2. Site, frontend ve backend olarak iki ayrı klasörde organize edilecektir.

--- FRONTEND KURALLARI ---

3. Frontend React.js ile geliştirilecektir.
4. Sayfalar: Ana Sayfa, Kategoriler, Yazı Detay, Hakkımızda, İletişim.
5. Yazı detay sayfaları slugify edilmiş URL’lerle yönlendirilmelidir (örn: /haber/yapay-zeka-devrimi).
6. Duyuru/haber listesi ve detay sayfası ayrı ayrı gösterilmelidir.
7. Galeri sayfası, haber içeriklerinde kullanılan resimleri listeleyecek şekilde tasarlanmalıdır.
8. Ziyaretçi sayısı ve online kullanıcı sayısı footer alanında gösterilecektir.
9. CSRF token frontend tarafında formlarda taşınmalı ve güvenli gönderim yapılmalıdır.
10. React Router ile client-side routing yapılacaktır.

Frontend klasör yapısı:

frontend/
│
├── public/
│   └── index.html, favicon, vs.
├── src/
│   ├── pages/
│   │   ├── Home.jsx
│   │   ├── Categories.jsx
│   │   ├── PostDetail.jsx
│   │   ├── Gallery.jsx
│   │   └── About.jsx
│   ├── components/
│   │   ├── Header.jsx
│   │   ├── Footer.jsx
│   │   └── PostCard.jsx
│   ├── services/
│   │   └── api.js (axios istekleri burada yapılır)
│   └── App.jsx, index.js, styles/

--- BACKEND KURALLARI ---

11. Backend Node.js + Express.js ile yazılacaktır.
12. Veritabanı MongoDB’dir ve Mongoose kullanılacaktır.
13. Kullanıcı yetkilendirmesi session veya JWT ile yapılacaktır.
14. Admin panelinden yazı/kategori/resim CRUD işlemleri yapılacaktır.
15. CSRF koruması aktif olacak, form işlemlerinde zorunlu olacaktır.
16. Online kullanıcı sayısı aktif oturumlar veya WebSocket ile izlenecektir.
17. Slugify kütüphanesi ile başlıklar otomatik olarak URL dostu hale getirilecektir.
18. Sitemap.xml otomatik üretilmeli ve erişilebilir olmalıdır.

Backend klasör yapısı:

backend/
│
├── models/
│   ├── User.js
│   ├── Post.js
│   └── Category.js
├── routes/
│   ├── auth.js
│   ├── posts.js
│   ├── categories.js
│   └── admin.js
├── controllers/
│   ├── authController.js
│   ├── postController.js
│   └── categoryController.js
├── middlewares/
│   ├── isAdmin.js
│   ├── csrfProtection.js
│   └── slugifyTitle.js
├── views/ (isteğe bağlı, eğer SSR yapılacaksa)
├── public/ (upload edilen resimler burada tutulabilir)
├── config/
│   └── db.js
├── app.js
└── server.js

--- GENEL KURALLAR ---

19. Tüm endpointler RESTful olacak şekilde planlanmalıdır.
20. Backend API ile frontend arasında veri alışverişi JSON formatında yapılacaktır.
21. Admin dışında kullanıcılar içerik ekleyemez veya silemez.
22. Hatalar için özelleştirilmiş yanıt mesajları ve hata sayfaları sunulmalıdır (örn: 403, 404, 500).
